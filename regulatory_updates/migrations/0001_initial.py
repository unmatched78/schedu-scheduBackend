# Generated by Django 5.2 on 2025-04-04 23:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_initial'),
        ('scheduling', '0001_initial'),
        ('ticketing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegulatoryUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('source_type', models.CharField(choices=[('regulation', 'Regulation'), ('law', 'Law'), ('trend', 'Industry Trend'), ('news', 'News')], max_length=20)),
                ('industry', models.CharField(choices=[('healthcare', 'Healthcare'), ('finance', 'Finance'), ('tech', 'Technology'), ('manufacturing', 'Manufacturing'), ('retail', 'Retail'), ('other', 'Other')], max_length=20)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('published_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organizations', models.ManyToManyField(blank=True, related_name='regulatory_updates', to='scheduling.organization')),
            ],
        ),
        migrations.CreateModel(
            name='UpdateAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.worker')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.organization')),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ticketing.ticket')),
                ('update', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='regulatory_updates.regulatoryupdate')),
            ],
        ),
    ]
